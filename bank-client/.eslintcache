[{"D:\\React Projects\\Capital Banking\\bank-client\\src\\index.js":"1","D:\\React Projects\\Capital Banking\\bank-client\\src\\App.js":"2","D:\\React Projects\\Capital Banking\\bank-client\\src\\reportWebVitals.js":"3","D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\Home\\index.js":"4","D:\\React Projects\\Capital Banking\\bank-client\\src\\components\\Layout\\index.js":"5","D:\\React Projects\\Capital Banking\\bank-client\\src\\components\\Header\\index.js":"6","D:\\React Projects\\Capital Banking\\bank-client\\src\\components\\Footer\\index.js":"7","D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\customerDetails\\index.js":"8","D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\history\\index.js":"9","D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\selectUser\\index.js":"10","D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\transfer\\index.js":"11","D:\\React Projects\\Capital Banking\\bank-client\\src\\url.js":"12","D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\successPage\\index.js":"13"},{"size":550,"mtime":1609945659989,"results":"14","hashOfConfig":"15"},{"size":908,"mtime":1610088793903,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1363,"mtime":1609993264082,"results":"18","hashOfConfig":"15"},{"size":376,"mtime":1609943653287,"results":"19","hashOfConfig":"15"},{"size":1432,"mtime":1609951838506,"results":"20","hashOfConfig":"15"},{"size":843,"mtime":1610108485082,"results":"21","hashOfConfig":"15"},{"size":1685,"mtime":1610027197308,"results":"22","hashOfConfig":"15"},{"size":1477,"mtime":1610027365455,"results":"23","hashOfConfig":"15"},{"size":1738,"mtime":1610004942657,"results":"24","hashOfConfig":"15"},{"size":3712,"mtime":1610091997585,"results":"25","hashOfConfig":"15"},{"size":42,"mtime":1609996580457,"results":"26","hashOfConfig":"15"},{"size":2378,"mtime":1610092188096,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"naobll",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},"D:\\React Projects\\Capital Banking\\bank-client\\src\\index.js",[],["57","58"],"D:\\React Projects\\Capital Banking\\bank-client\\src\\App.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\reportWebVitals.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\Home\\index.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\components\\Layout\\index.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\components\\Header\\index.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\components\\Footer\\index.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\customerDetails\\index.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\history\\index.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\selectUser\\index.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\transfer\\index.js",["59","60"],"import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport axios from 'axios';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { api } from '../../url';\r\nimport '../../components/table.css'\r\n\r\nexport default function Transfer(props) {\r\n    const [success, setSuccess] = useState(false)\r\n    const UserId = props.match.params.id;\r\n    const [acc_no, setAcc] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [customer, setCustomer] = useState([])\r\n    useEffect(() => {                                  //fetch function to get data from api\r\n        fetch(`${api}/custDetails`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setCustomer(data)\r\n            })\r\n    }, [])\r\n\r\n    const [user, setUser] = useState([])\r\n    useEffect(() => {\r\n        fetch(`${api}/transact/${UserId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setUser(data)\r\n            })\r\n    }, [])\r\n\r\n\r\n    const transfer = (e) => {\r\n        const data = {\r\n            user: acc_no,\r\n            amount: amount\r\n        }\r\n        axios.post(`${api}/transfer/${user._id}`, { ...data })\r\n        .then(function (response) {\r\n            if(response.status === 200){\r\n\r\n                localStorage.setItem('transaction',JSON.stringify(response.data) );\r\n            }\r\n            setSuccess(true)\r\n          });\r\n        e.preventDefault();\r\n    };\r\n\r\n    if (success) {\r\n        return <Redirect to={`/success`} />;\r\n    }\r\n    return (\r\n        <Layout >\r\n            <br />\r\n            <div>\r\n                <h1>User Information</h1>\r\n                <h3>Transact from</h3>\r\n                <br />\r\n                <table>\r\n                    <th>NAME</th>\r\n                    <th>EMAIL</th>\r\n                    <th>ACCOUNT NUMBER</th>\r\n                    <th>CURRENT BALANCE</th>\r\n                    <th>LOCATION</th>\r\n                    <tr>\r\n                        <td>{user.name}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.acc_no}</td>\r\n                        <td>{user.balance}</td>\r\n                        <td>{user.location}</td>\r\n                    </tr>\r\n                </table>\r\n                <form onSubmit={transfer}>\r\n                    <br /><br /><h3>Transact To</h3><br />\r\n                    <table>\r\n                        <tr><td>Transfer To:</td><td>\r\n                            <select name=\"user\"\r\n                                value={acc_no} name=\"toUser\"\r\n                                onChange={(e) => setAcc(e.target.value)}>\r\n                                <option>Select User&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                {customer.map((item) => (\r\n                                    item._id !== user._id &&\r\n                                    <option value={item.acc_no} name=\"toUser\"\r\n                                        onChange={(e) => setAcc(e.target.value)}>{item.name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </td></tr>\r\n                        <tr>\r\n                            <td>Amount:</td><td><input type=\"number\" name=\"amount\" value={amount}\r\n                                onChange={(e) => setAmount(e.target.value)} /></td>\r\n                        </tr>\r\n                    </table>\r\n                    <br />\r\n                    <button className=\"btn-submit\" type=\"submit\" value=\"Submit\" align=\"center\">Submit</button>\r\n                </form>\r\n                <br /><br /><br />\r\n            </div>\r\n        </Layout>\r\n    )\r\n}","D:\\React Projects\\Capital Banking\\bank-client\\src\\url.js",[],"D:\\React Projects\\Capital Banking\\bank-client\\src\\containers\\successPage\\index.js",["61"],"import React ,{useEffect , useState} from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './style.css';\r\n\r\nexport default function SuccessPage() {\r\n    const [redirect, setRedirect] = useState(false)\r\n    const transaction = window.localStorage.getItem(\"transaction\");\r\n    var token = JSON.parse(transaction);\r\n    useEffect(() => {\r\n        let interval = null;\r\n           interval = setInterval(() => {\r\n            setRedirect(true);\r\n           }, 5000);\r\n      }, [redirect])\r\n      if (redirect) {\r\n        return <Redirect to={`/history`} />;\r\n    }\r\n    return (\r\n        <div id =\"success\">\r\n        <div className=\"container\" id =\"success\" >\r\n            <div className=\"printer-top\">\r\n            </div>\r\n            <div className=\"paper-container\">\r\n                <div className=\"printer-bottom\">\r\n                </div>\r\n                <div className=\"paper\">\r\n                    <div className=\"main-contents\">\r\n                        <div className=\"success-icon\">&#10004;</div>\r\n                        <div className=\"success-title\">\r\n                            Payment Successful\r\n                        </div>\r\n                        <div className=\"success-description\">\r\n                            <div className=\"text\" >\r\n                                &emsp;&emsp;<span >Amount :</span>&emsp;&emsp;&emsp;&emsp;&ensp;<span>{token.amount}</span><br />\r\n                                &emsp;&emsp;<span>Sender :</span>&emsp;&emsp;&emsp;&emsp;<span>{token.sendersName}</span><br />\r\n                                &emsp;&emsp;<span>Reciever :</span>&emsp;&emsp;&ensp;&ensp;&ensp;&nbsp;&nbsp;&nbsp;<span>{token.recieversName}</span><br />\r\n                            </div>\r\n                            <div className=\"order-details\"><br />\r\n                                <div className=\"order-number-label\">Order Number</div>\r\n                                <div className=\"order-number\">{token.transactionNumber}</div>\r\n                            </div>\r\n                            <div className=\"order-footer\">Thank you!</div>\r\n                        </div>\r\n                        <div className=\"jagged-edge\"></div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n             <div className=\"continue\" ><h3>Redirecting...</h3></div> \r\n        </div>\r\n</div>\r\n    )\r\n}",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":29,"column":8,"nodeType":"68","endLine":29,"endColumn":10,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":77,"column":48,"nodeType":"72","endLine":77,"endColumn":61},{"ruleId":"73","severity":1,"message":"74","line":11,"column":12,"nodeType":"75","messageId":"76","endLine":11,"endColumn":20},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UserId'. Either include it or remove the dependency array.","ArrayExpression",["79"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'interval' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [UserId]",{"range":"82","text":"83"},[1046,1048],"[UserId]"]